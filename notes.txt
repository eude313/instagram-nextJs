import React, { useState, useEffect } from 'react';
import { Button, Input, Card, Modal, Avatar } from '@nextui-org/react';
import ApiService from '@/services/ApiService';

export default function PostManagement() {
  const [posts, setPosts] = useState([]);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [postFile, setPostFile] = useState(null);
  const [postCaption, setPostCaption] = useState('');
  const [comment, setComment] = useState('');

  useEffect(() => {
    fetchPosts();
  }, []);

  const fetchPosts = async () => {
    try {
      const data = await ApiService.getPosts();
      setPosts(data.results);
    } catch (error) {
      console.error('Error fetching posts:', error);
    }
  };

  const handleFileChange = (event) => {
    setPostFile(event.target.files[0]);
  };

  const handleUpload = async () => {
    if (!postFile) {
      alert('Please select a file to upload');
      return;
    }

    const formData = new FormData();
    formData.append('file', postFile);
    formData.append('caption', postCaption);

    try {
      await ApiService.createPost(formData);
      setIsModalOpen(false);
      setPostFile(null);
      setPostCaption('');
      fetchPosts();
    } catch (error) {
      console.error('Error uploading post:', error);
    }
  };

  const handleLike = async (postId) => {
    try {
      await ApiService.likePost(postId);
      fetchPosts();
    } catch (error) {
      console.error('Error liking post:', error);
    }
  };

  const handleComment = async (postId) => {
    try {
      await ApiService.addComment(postId, { content: comment });
      setComment('');
      fetchPosts();
    } catch (error) {
      console.error('Error adding comment:', error);
    }
  };

  const handleSave = async (postId) => {
    try {
      await ApiService.savePost(postId);
      fetchPosts();
    } catch (error) {
      console.error('Error saving post:', error);
    }
  };

  const handleShare = async (postId) => {
    try {
      const { share_link } = await ApiService.getShareLink(postId);
      // Here you might want to use a library like react-share to implement social sharing
      alert(`Share this link: ${share_link}`);
    } catch (error) {
      console.error('Error getting share link:', error);
    }
  };

  return (
    <div>
      <Button onClick={() => setIsModalOpen(true)}>Create New Post</Button>

      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>
        <Modal.Header>Create New Post</Modal.Header>
        <Modal.Body>
          <Input type="file" onChange={handleFileChange} accept="image/*, video/*" />
          <Input
            placeholder="Add a caption..."
            value={postCaption}
            onChange={(e) => setPostCaption(e.target.value)}
          />
        </Modal.Body>
        <Modal.Footer>
          <Button onClick={handleUpload}>Post</Button>
        </Modal.Footer>
      </Modal>

      <div className="posts">
        {posts.map((post) => (
          <Card key={post.id} className="mb-4">
            <Card.Body>
              <div className="flex items-center mb-2">
                <Avatar src={post.user.profile_picture} alt={post.user.username} />
                <span className="ml-2">{post.user.username}</span>
              </div>
              <img src={post.media_items[0].file} alt="Post" className="w-full mb-2" />
              <p>{post.caption}</p>
              <div className="flex justify-between mt-2">
                <Button onClick={() => handleLike(post.id)}>Like ({post.likes_count})</Button>
                <Button onClick={() => handleSave(post.id)}>Save</Button>
                <Button onClick={() => handleShare(post.id)}>Share</Button>
              </div>
              <div className="mt-2">
                <Input
                  placeholder="Add a comment..."
                  value={comment}
                  onChange={(e) => setComment(e.target.value)}
                />
                <Button onClick={() => handleComment(post.id)}>Comment</Button>
              </div>
              <div className="mt-2">
                {post.comments.map((comment) => (
                  <p key={comment.id}><strong>{comment.user.username}</strong>: {comment.content}</p>
                ))}
              </div>
            </Card.Body>
          </Card>
        ))}
      </div>
    </div>
  );
}


# story

import React, { useState, useEffect } from 'react';
import { Button, Input, Card, Modal } from '@nextui-org/react';
import ApiService from '@/services/ApiService';

export default function StoryManagement() {
  const [myStories, setMyStories] = useState([]);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [storyFile, setStoryFile] = useState(null);
  const [storyCaption, setStoryCaption] = useState('');

  useEffect(() => {
    fetchMyStories();
  }, []);

  const fetchMyStories = async () => {
    try {
      const data = await ApiService.getMyStories();
      setMyStories(data);
    } catch (error) {
      console.error('Error fetching my stories:', error);
    }
  };

  const handleFileChange = (event) => {
    setStoryFile(event.target.files[0]);
  };

  const handleUpload = async () => {
    if (!storyFile) {
      alert('Please select a file to upload');
      return;
    }

    const formData = new FormData();
    formData.append('file', storyFile);
    formData.append('caption', storyCaption);

    try {
      await ApiService.createStory(formData);
      setIsModalOpen(false);
      setStoryFile(null);
      setStoryCaption('');
      fetchMyStories();
    } catch (error) {
      console.error('Error uploading story:', error);
    }
  };

  const handleDelete = async (storyId) => {
    try {
      await ApiService.deleteStory(storyId);
      fetchMyStories();
    } catch (error) {
      console.error('Error deleting story:', error);
    }
  };

  return (
    <div>
      <Button onClick={() => setIsModalOpen(true)}>Upload New Story</Button>

      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>
        <Modal.Header>Upload New Story</Modal.Header>
        <Modal.Body>
          <Input type="file" onChange={handleFileChange} accept="image/*, video/*" />
          <Input
            placeholder="Add a caption..."
            value={storyCaption}
            onChange={(e) => setStoryCaption(e.target.value)}
          />
        </Modal.Body>
        <Modal.Footer>
          <Button onClick={handleUpload}>Upload</Button>
        </Modal.Footer>
      </Modal>

      <div className="my-stories">
        {myStories.map((story) => (
          <Card key={story.id}>
            <Card.Body>
              <p>{story.caption}</p>
              <Button onClick={() => handleDelete(story.id)}>Delete</Button>
            </Card.Body>
          </Card>
        ))}
      </div>
    </div>
  );
}



'use client';

import React from 'react';
import { Back } from "@/icons";
import ApiService from '@/lib/ApiService';
import { Textarea } from "@nextui-org/input";
import { Avatar, Input, Button} from '@nextui-org/react';

export default function EditPage() {
    const inputRef = React.useRef(null);

    const handleFileUpload = (e) => {
      const files = e.target.files;
      if (!files) return;
  
      const file = files[0];
      console.log(file.name); 
    };
  
    const handleButtonClick = (e) => {
      e.preventDefault();
      if (!inputRef || !inputRef.current) return;
  
      inputRef.current.click();
    };
  
    const fetchProfile = async () => {
        try {
        const profileData = await ApiService.getCurrentUserProfile();
        console.log('Profile:', profileData);
        } catch (error) {
        console.error('Error fetching profile:', error);
        }
    };
    
    const updateProfile = async (updatedData) => {
        try {
        const updatedProfile = await ApiService.updateUserProfile(updatedData);
        console.log('Updated Profile:', updatedProfile);
        } catch (error) {
        console.error('Error updating profile:', error);
        }
    };
    
    return (
        <main className='flex'>
            <div class="grow h-screen overflow-y-auto px-2">
                <form className="flex flex-col gap-y-5 mt-4 lg:mt-6 mb-[50px] md:mb-0">
                    <div className='bg-[#EFEFEF] dark:bg-[#262626] my-2 py-4 
                    rounded-lg pl-3 '>
                        <div className="flex">
                            <Avatar 
                                radius="full"
                                className="text-sm flex-shrink-0 h-20 w-20"
                                src="/default-avatar.png" 
                            />
                            <div className="flex flex-col ml-2 my-auto">
                                <p className='font-semibold text-sm cursor-pointer mx-4'>
                                    username
                                </p>
                                <div>
                                    <Button 
                                        onClick={handleButtonClick}
                                        className="cursor-pointer bg-inherit font-semibold text-[#1877F2] hover:text-black 
                                        dark:hover:text-white"
                                    >
                                        Upload File
                                    </Button>
                                    <input ref={inputRef} type="file" hidden onChange={handleFileUpload} />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div>
                        <Input
                            size='md'
                            fullWidth
                            type="url"
                            isDisabled
                            label="Website"
                            placeholder="Website"
                            labelPlacement="outside"
                            classNames={{
                                label: "text-xl font-semibold mb-3",
                            }}
                            description={
                                <small>
                                    Editing your links is only available on mobile. Visit the Instagram app and edit your profile to change the websites in your bio.
                                </small>
                            }
                        />
                    </div>
                    <div className='my-3 w-full'>
                        <Textarea
                            fullWidth
                            minRows={3}
                            variant="bordered"
                            label="Bio"
                            labelPlacement="outside"
                            placeholder="Bio"
                            classNames={{
                                base: "min-w-xs",
                                input: "resize-y min-h-[40px]",
                                label: "text-xl font-semibold mb-3",
                            }}
                            endContent={
                                <div className="pointer-events-none flex items-end w-8">
                                    <span className="text-default-400 text-small">
                                        0 / 150 
                                    </span>
                                </div>
                            }
                        />
                    </div>
                    <div>
                        <Input
                            fullWidth
                            isReadOnly
                            type="gender"
                            label="Gender"
                            variant="bordered"
                            placeholder="Gender"
                            labelPlacement="outside"
                            endContent={
                                <span className="rotate-180">
                                    <Back width="15" height='15'  className="text-default-400 pointer-events-none flex-shrink-0" />
                                </span>
                            }
                            classNames={{
                                label: "text-xl font-semibold mb-3",
                            }}
                            description={
                                <small>
                                   This won’t be part of your public profile.
                                </small>
                            }
                        />
                    </div>
                    <div className='my-b w-full flex justify-end'>
                        <div class="grow"></div>
                        <div class="w-48 md:w-64">
                            <Button fullWidth type="submit" className="bg-[#4CB5F9] text-white" 
                            // isLoading
                            >
                                Submit
                            </Button>
                        </div>
                    </div>
                </form>
           </div>
        </main>
    );
}












  <button aria-label="Toggle audio" class=" _acan _acao _acas _aj1- _ap30" type="button"><div class="x9f619 x78zum5 x14yjl9h xudhj91 x18nykt9 xww2gxu x1yztbdb xktsk01 x1y1aw1k x1sxyh0 xwib8y2 xurb0ha x1uhb9sk x1plvlek xryxfnj x1c4vz4f x2lah0s xdt5ytf xqjyukv x1qjc9v5 x1oa3qoh x1nhvcw1 x1wunsqr"><svg aria-label="Audio is muted" class="x1lliihq x1n2onr6 x9bdzbf" fill="currentColor" height="12" role="img" viewBox="0 0 48 48" width="12"><title>Audio is muted</title><path clip-rule="evenodd" d="M1.5 13.3c-.8 0-1.5.7-1.5 1.5v18.4c0 .8.7 1.5 1.5 1.5h8.7l12.9 12.9c.9.9 2.5.3 2.5-1v-9.8c0-.4-.2-.8-.4-1.1l-22-22c-.3-.3-.7-.4-1.1-.4h-.6zm46.8 31.4-5.5-5.5C44.9 36.6 48 31.4 48 24c0-11.4-7.2-17.4-7.2-17.4-.6-.6-1.6-.6-2.2 0L37.2 8c-.6.6-.6 1.6 0 2.2 0 0 5.7 5 5.7 13.8 0 5.4-2.1 9.3-3.8 11.6L35.5 32c1.1-1.7 2.3-4.4 2.3-8 0-6.8-4.1-10.3-4.1-10.3-.6-.6-1.6-.6-2.2 0l-1.4 1.4c-.6.6-.6 1.6 0 2.2 0 0 2.6 2 2.6 6.7 0 1.8-.4 3.2-.9 4.3L25.5 22V1.4c0-1.3-1.6-1.9-2.5-1L13.5 10 3.3-.3c-.6-.6-1.5-.6-2.1 0L-.2 1.1c-.6.6-.6 1.5 0 2.1L4 7.6l26.8 26.8 13.9 13.9c.6.6 1.5.6 2.1 0l1.4-1.4c.7-.6.7-1.6.1-2.2z" fill-rule="evenodd"></path></svg></div></button>

